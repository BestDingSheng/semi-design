{"componentChunkName":"component---src-templates-post-template-js","path":"/en-US/feedback/progress","result":{"data":{"current":{"frontmatter":{"title":"Progress","order":63,"brief":"Show the current progress of the operation.","icon":"doc-progress"},"fields":{"type":"feedback"},"tableOfContents":{"items":[{"url":"#when-to-use","title":"When to use"},{"url":"#demos","title":"Demos","items":[{"url":"#how-to-import","title":"How to import"},{"url":"#standard-progress-bar","title":"Standard progress bar"},{"url":"#show-percentage-text","title":"Show percentage text"},{"url":"#vertical-progress-bar","title":"Vertical progress bar"},{"url":"#circular-progress-bar","title":"Circular progress bar"},{"url":"#small-circular-progress-bar","title":"Small circular progress bar"},{"url":"#dynamic-change-percent","title":"Dynamic change percent"},{"url":"#custom-central-text-content","title":"Custom central text content"},{"url":"#round--square-edges","title":"Round / square edges"}]},{"url":"#api-reference","title":"API Reference"},{"url":"#design-tokens","title":"Design Tokens"}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"localeCode\": \"en-US\",\n  \"order\": 63,\n  \"category\": \"Feedback\",\n  \"title\": \"Progress\",\n  \"subTitle\": \"Progress\",\n  \"icon\": \"doc-progress\",\n  \"width\": \"60%\",\n  \"brief\": \"Show the current progress of the operation.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar DesignToken = makeShortcode(\"DesignToken\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"When to use\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Display the current progress and state of the operation for the user when the operation takes a long time to complete\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Demos\"), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"How to import\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { Progress } from '@douyinfe/semi-ui';\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Standard progress bar\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stroke\"), \" Property to control the filling color of the progress bar\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Percent\"), \" Property to control completed progress\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" Property control progress bar size\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"If the preset size is not satisfied, You can pass height to customize the height of the progress bar through \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"style\"), \" property.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Progress } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <div style={{ width: 200 }}>\\n        <Progress percent={10} stroke='#fc8800' />\\n        <br/>\\n        <Progress percent={25} stroke='#f93920' />\\n        <br/>\\n        <Progress percent={50} />\\n        <br/>\\n        <Progress percent={80} />\\n        <br/>\\n        <Progress percent={80} size='large' />\\n        <br/>\\n        <Progress percent={80} style={{ height: '8px' }}/>\\n    </div>\\n)\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Show percentage text\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can control whether to show percentage number through the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"showInfo\"), \" property\\nIn addition, you can format the percentage text show through \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"format\"), \".\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Progress } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <div style={{ width: 200 }}>\\n        <Progress percent={10} stroke='#fc8800' showInfo={true}/>\\n        <br/>\\n        <Progress percent={25} stroke='#f93920' showInfo={true}/>\\n        <br/>\\n        <Progress percent={50} showInfo={true}/>\\n        <br/>\\n        <Progress percent={50} showInfo={true} format={percent => (percent*10) + '\\u2030'}/>\\n    </div>\\n)\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Vertical progress bar\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can use vertical progress bar by setting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"direction='vertical'\"), \"\\nIf preset width is not satisfied, you can pass width to customize the width of the vertical progress bar through \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"style\"), \" property.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Progress } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <div style={{ height: 100, display: 'flex' }}>\\n        <Progress percent={10} direction='vertical'/>\\n        <Progress percent={25} direction='vertical' />\\n        <Progress percent={50} direction='vertical' />\\n        <Progress percent={80} direction='vertical' size='large' />\\n        <Progress percent={80} direction='vertical' style={{ width: '8px' }}/>\\n    </div>\\n)\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Circular progress bar\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Set type to\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"circle\"), \", the progress bar will be displayed in a ring shape. The default size of the progress bar is 72 x 72\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Progress } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <div>\\n        <Progress percent={10} type='circle' style={{ margin: 5 }} />\\n        <Progress percent={25} type='circle' style={{ margin: 5 }} />\\n        <Progress percent={50} type='circle' style={{ margin: 5 }} />\\n        <Progress percent={80} type='circle' style={{ margin: 5 }} />\\n    </div>\\n)\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can modify it's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"width\"), \" to control the size of the circular progress bar.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Progress } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <React.Fragment>\\n        <div>\\n            <Progress percent={100} type='circle' width={100} style={{ margin: 5 }} />\\n        </div>\\n        <div>\\n            <Progress percent={100} type='circle' width={100} style={{ margin: 5 }} stroke='#f93920' />\\n        </div>\\n    </React.Fragment>\\n)\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Small circular progress bar\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Small progress bar default size is 24 x 24.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Progress } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <React.Fragment>\\n        <Progress percent={10} type='circle' size='small' style={{ margin: 5 }} />\\n        <Progress percent={25} type='circle' size='small' style={{ margin: 5 }} />\\n        <Progress percent={50} type='circle' size='small' style={{ margin: 5 }} />\\n        <Progress percent={80} type='circle' size='small' style={{ margin: 5 }} />\\n    </React.Fragment>\\n)\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Dynamic change percent\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Progress } from '@douyinfe/semi-ui';\\nimport { IconChevronLeft, IconChevronRight } from '@douyinfe/semi-icons';\\n\\n() => {\\n    const [percent, setPercent] = useState(40);\\n    return (\\n        <>\\n            <div>\\n                <Progress percent={percent} showInfo/>\\n                <Button icon={<IconChevronLeft />} theme=\\\"light\\\" onClick={()=> {setPercent(percent - 10)}} disabled={percent === 0} />\\n                <Button icon={<IconChevronRight />} theme=\\\"light\\\" onClick={()=> {setPercent(percent + 10)}} disabled={percent >=100 } />\\n            </div>\\n\\n        </>\\n    )\\n}\\n\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Progress } from '@douyinfe/semi-ui';\\nimport { IconChevronLeft, IconChevronRight } from '@douyinfe/semi-icons';\\n\\n() => {\\n    const [cirPerc, setCirPerc] = useState(40);\\n    return (\\n        <div>\\n            <div><Progress percent={cirPerc} type='circle'/></div>\\n            <Button icon={<IconChevronLeft />} theme=\\\"light\\\" onClick={()=> {setCirPerc(cirPerc - 10)}} disabled={cirPerc === 0}/>\\n            <Button icon={<IconChevronRight />} theme=\\\"light\\\" onClick={()=> {setCirPerc(cirPerc + 10)}} disabled={cirPerc >=100 }/>\\n        </div>\\n    )\\n}\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Custom central text content\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can customize the central text by passing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"format\"), \" function, and the argument of the format is the current percentage\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"If you don't need central text content, you can set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"showInfo\"), \" to false or return an empty string directly in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"format\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Progress } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <React.Fragment>\\n        <Progress percent={75} showInfo type='circle' format={(per) => per + 'Days'} style={{ margin:10 }}/>\\n        <Progress percent={100} showInfo type='circle' format={(per) => 'Done'} style={{ margin:10 }}/>\\n        <Progress percent={50} showInfo type='circle' showInfo={false} style={{ margin:10 }}/>\\n    </React.Fragment>\\n)\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Round / square edges\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"With the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"strokeLinecap\"), \" property, you can control the edge shape of the ring progress bar.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Progress } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <React.Fragment>\\n        <Progress percent={50} strokeLinecap='round' type='circle' style={{ margin: 10 }} />\\n        <Progress percent={50} strokeLinecap='square' type='circle' style={{ margin:10 }} />\\n    </React.Fragment>\\n)\\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"API Reference\"), mdx(\"table\", {\n    parentName: \"section\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"PROPERTIES\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Instructions\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"className\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"style class name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"direction\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"The direction of the bar progress bar \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"horizontal\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"vertical\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"'horizontal'\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"format\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Formatting function, the input parameter is the current percentage, the result of return will be directly rendered in the center of the circular progress bar\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(percent: number) => ReactNode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(percent) => percent +'%'\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"orbitStroke\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Progress bar track fill color\", mdx(\"br\", null), mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"provided after v1.0.0\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"'var(--semi-color-fill-0)'\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"percent\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"percentage of progress\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"showInfo\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Whether to display the middle text in the circular progress bar, and whether to display the text on the right side of the bar-shaped progress bar\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"false\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"size\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"size, optional \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"default\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"small\"), \" (only type=circle is effective), \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"large\"), \" (only type=line is effective)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"'default'\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"stroke\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Fill color of progress bar\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"'var(--semi-color-success)'\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"strokeLinecap\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"round corner \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"round\"), \"/square corner \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"square\"), \" (only effective in type='circle' mode)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"'round'\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"strokeWidth\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"When type is \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"line\"), \", this property controls the height of the progress bar; when type is \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"circle\"), \", this property controls the width of the progress bar\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"4\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"style\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"style\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CSSProperties\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"type\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"type, optional \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"line\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"circle\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"'line'\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"width\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Width of circular progress bar\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"72 when size='default', 24 for 'small'\"))))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Design Tokens\"), mdx(DesignToken, {\n    mdxType: \"DesignToken\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"en-US/feedback/progress","next":{"fields":{"slug":"zh-CN/feedback/progress"},"id":"8228fc1e-72d1-563b-bdb2-cc19ed2cb84c","frontmatter":{"title":"Progress 进度条","localeCode":"zh-CN","icon":"doc-progress"}},"previous":{"fields":{"slug":"zh-CN/feedback/popconfirm"},"id":"d9f9aea9-6419-5ca9-9c97-e0fd02af0ba6","frontmatter":{"title":"Popconfirm 气泡确认框","localeCode":"zh-CN","icon":"doc-popconfirm"}}}},"staticQueryHashes":["1348983216","1348983216","1477422646","2732170773","63159454"]}